@page "/"
@using Microsoft.Data.Sqlite
@using SQLInjection.Data
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<UserDataContext> UserDataContextFactory;

<PageTitle>Vulnerable</PageTitle>

<div class="user-input">
    <label for="inputUser">Username:</label>
    <input id="inputPass" @bind="username" />
    <label for="inputPass">Password:</label>
    <input id="inputPass" @bind="password" />
    <button @onclick="GetUser">Submit</button>
</div>

<div class = "error-message">
    @if(error != null)
    {
        @error
    }
</div>

@code {
    private string? username;
    private string? password;
    public User? emp {get; set;}
    public string? error;
    [Inject] private NavigationManager NavMan {get; set;}
    private UserDataContext? _context;
    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    public async Task GetUser()
    {
        emp = null;
        error = null; 

        _context ??= await UserDataContextFactory.CreateDbContextAsync();

        if (_context is not null)
        {
            try
            {
                string query = "SELECT * FROM User WHERE username = '" + username + "' and password = '" + password + "'";
                emp = await _context.Users.FromSqlRaw(query).FirstOrDefaultAsync();
                
                if (emp == null)
                {
                    error = "Username or password incorrect";
                }
                else
                {
                    NavMan.NavigateTo($"/profile/{emp.Name}");
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine("Error fetching user: " + ex.Message);
            }
        }
    }
}